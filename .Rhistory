bp_toy()
out <- bp_toy()
bp_toy <- function(r0 = 2,initial_cases = 1,gens = 20,gentime = 5,hosprate = 0.015)
{
out <- tibble(gen = 1:gens) %>%
mutate(days = (gen-1)*gentime,
cases = initial_cases*r0^gen) %>%
mutate(hosp = cases * hosprate)
return(out)
}
out <- bp_toy()
ggplot(out,aes(x = days,y = hosp))+
geom_line()
ggplot(out,aes(x = days,y = hosp))+
geom_line()+
scale_y_log10()
out <- bp_toy(R0=2,hosprate = 0.015)
out <- bp_toy(r0=2,hosprate = 0.015)
ggplot(out,aes(x = days,y = hosp))+
geom_line()+
scale_y_log10()
out <- bp_toy(r0=3,hosprate = 0.0075)
ggplot(out,aes(x = days,y = hosp))+
geom_line()+
scale_y_log10()
out <- bp_toy(r0=2,hosprate = 0.015) %>%
mutate(scenario = "severe") %>%
bind_rows(bp_toy(r0=3,hosprate = 0.0075) %>%
mutate(scenario = "infectious"))
ggplot(out,aes(x = days,y = hosp,col = "scenario"))+
geom_line()
ggplot(out,aes(x = days,y = hosp,col = "scenario"))+
geom_line(aes(group = "scenario"))
ggplot(out,aes(x = days,y = hosp,col = scenario))+
geom_line()
out <- bp_toy(r0=2,hosprate = 0.015) %>%
mutate(scenario = "severe") %>%
bind_rows(bp_toy(r0=2.1,hosprate = 0.0075) %>%
mutate(scenario = "infectious"))
ggplot(out,aes(x = days,y = hosp,col = scenario))+
geom_line()
out <- bp_toy(r0=2,hosprate = 0.02) %>%
mutate(scenario = "severe") %>%
bind_rows(bp_toy(r0=2.1,hosprate = 0.002) %>%
mutate(scenario = "infectious"))
ggplot(out,aes(x = days,y = hosp,col = scenario))+
geom_line()
out <- bp_toy(r0=2,hosprate = 0.02) %>%
mutate(scenario = "severe") %>%
bind_rows(bp_toy(r0=2.5,hosprate = 0.002) %>%
mutate(scenario = "infectious"))
ggplot(out,aes(x = days,y = hosp,col = scenario))+
geom_line()
out <- bp_toy(r0=2,hosprate = 0.02,gentime = 5) %>%
mutate(scenario = "severe") %>%
bind_rows(bp_toy(r0=2,hosprate = 0.02,gentime = 3) %>%
mutate(scenario = "infectious"))
ggplot(out,aes(x = days,y = hosp,col = scenario))+
geom_line()
out <- bp_toy(r0=1.1,hosprate = 0.02,gentime = 5) %>%
mutate(scenario = "severe") %>%
bind_rows(bp_toy(r0=2,hosprate = 0.02,gentime = 5) %>%
mutate(scenario = "infectious"))
ggplot(out,aes(x = days,y = hosp,col = scenario))+
geom_line()
ggplot(out,aes(x = days,y = hosp,col = scenario))+
geom_line()+
scale_y_log10()
1^1
bp_toy <- function(r = 2,initial_cases = 1,gens = 20,gentime = 5,hosprate = 0.015)
{
out <- tibble(gen = 1:gens) %>%
mutate(days = (gen-1)*gentime,
cases = initial_cases*r^(gen*rnorm(gens,0,r*0.05)) %>%
mutate(hosp = cases * hosprate)
return(out)
}
out <- bp_toy(r0=1.1,hosprate = 0.02,gentime = 5) %>%
mutate(scenario = "severe") %>%
bind_rows(bp_toy(r0=2,hosprate = 0.02,gentime = 5) %>%
mutate(scenario = "infectious"))
bp_toy <- function(r = 2,initial_cases = 1,gens = 20,gentime = 5,hosprate = 0.015)
{
out <- tibble(gen = 1:gens) %>%
mutate(days = (gen-1)*gentime,
cases = initial_cases*r^(gen*rnorm(gens,0,r*0.05)) %>%
mutate(hosp = cases * hosprate)
return(out)
}
bp_toy <- function(r = 2,initial_cases = 1,gens = 20,gentime = 5,hosprate = 0.015)
{
out <- tibble(gen = 1:gens) %>%
mutate(days = (gen-1)*gentime,
cases = initial_cases*r^(gen*rnorm(gens,0,r*0.05))) %>%
mutate(hosp = cases * hosprate)
return(out)
}
out <- bp_toy(r0=1.1,hosprate = 0.02,gentime = 5) %>%
mutate(scenario = "severe") %>%
bind_rows(bp_toy(r0=2,hosprate = 0.02,gentime = 5) %>%
mutate(scenario = "infectious"))
out <- bp_toy(r=1.1,hosprate = 0.02,gentime = 5) %>%
mutate(scenario = "severe") %>%
bind_rows(bp_toy(r=2,hosprate = 0.02,gentime = 5) %>%
mutate(scenario = "infectious"))
ggplot(out,aes(x = days,y = hosp,col = scenario))+
geom_line()+
scale_y_log()
ggplot(out,aes(x = days,y = hosp,col = scenario))+
geom_line()+
scale_y_log2()
ggplot(out,aes(x = days,y = hosp,col = scenario))+
geom_line()+
scale_y_log10()
bp_toy <- function(r = 2,initial_cases = 1,gens = 20,gentime = 5,hosprate = 0.015)
{
out <- tibble(gen = 1:gens) %>%
mutate(days = (gen-1)*gentime,
cases = initial_cases*r^(gen+rnorm(gens,0,r*0.05))) %>%
mutate(hosp = cases * hosprate)
return(out)
}
out <- bp_toy(r=1.1,hosprate = 0.02,gentime = 5) %>%
mutate(scenario = "severe") %>%
bind_rows(bp_toy(r=2,hosprate = 0.02,gentime = 5) %>%
mutate(scenario = "infectious"))
ggplot(out,aes(x = days,y = hosp,col = scenario))+
geom_line()+
scale_y_log10()
out <- bp_toy(r=1.1,hosprate = 0.02,gentime = 5) %>%
mutate(scenario = "severe") %>%
bind_rows(bp_toy(r=1.5,hosprate = 0.02,gentime = 5) %>%
mutate(scenario = "infectious"))
ggplot(out,aes(x = days,y = hosp,col = scenario))+
geom_line()+
scale_y_log10()
_
_
bp_toy <- function(r = 2,initial_cases = 1,gens = 20,gentime = 5,hosprate = 0.015)
{
out <- tibble(gen = 1:gens) %>%
mutate(days = (gen-1)*gentime,
cases = initial_cases*r^(gen+rnorm(gens,0,r*0.1))) %>%
mutate(hosp = cases * hosprate)
return(out)
}
out <- bp_toy(r=1.1,hosprate = 0.02,gentime = 5) %>%
mutate(scenario = "severe") %>%
bind_rows(bp_toy(r=1.5,hosprate = 0.02,gentime = 5) %>%
mutate(scenario = "infectious"))
ggplot(out,aes(x = days,y = hosp,col = scenario))+
geom_line()+
scale_y_log10()
ggplot(out,aes(x = days,y = hosp,col = scenario))+
geom_line()
out <- bp_toy(r=1.1,hosprate = 0.02,gentime = 5) %>%
mutate(scenario = "severe") %>%
bind_rows(bp_toy(r=1.2,hosprate = 0.02,gentime = 5) %>%
mutate(scenario = "infectious"))
ggplot(out,aes(x = days,y = hosp,col = scenario))+
geom_line()
out <- bp_toy(r=1.1,hosprate = 0.02,gentime = 5) %>%
mutate(scenario = "severe") %>%
bind_rows(bp_toy(r=1.2,hosprate = 0.002,gentime = 5) %>%
mutate(scenario = "infectious"))
ggplot(out,aes(x = days,y = hosp,col = scenario))+
geom_line()
out <- bp_toy(r=1.1,hosprate = 0.02,gentime = 5) %>%
mutate(scenario = "severe") %>%
bind_rows(bp_toy(r=1.5,hosprate = 0.002,gentime = 5) %>%
mutate(scenario = "infectious"))
ggplot(out,aes(x = days,y = hosp,col = scenario))+
geom_line()
out <- bp_toy(r=1.1,hosprate = 0.02,gentime = 5) %>%
mutate(scenario = "severe") %>%
bind_rows(bp_toy(r=2,hosprate = 0.002,gentime = 5) %>%
mutate(scenario = "infectious"))
ggplot(out,aes(x = days,y = hosp,col = scenario))+
geom_line()
out <- bp_toy(r=1.1,hosprate = 0.02,gentime = 5) %>%
mutate(scenario = "severe") %>%
bind_rows(bp_toy(r=2,hosprate = 0.00002,gentime = 5) %>%
mutate(scenario = "infectious"))
ggplot(out,aes(x = days,y = hosp,col = scenario))+
geom_line()
bp_toy <- function(r = 2,initial_cases = 1,gens = 30,gentime = 5,hosprate = 0.015)
{
out <- tibble(gen = 1:gens) %>%
mutate(days = (gen-1)*gentime,
cases = initial_cases*r^(gen+rnorm(gens,0,r*0.1))) %>%
mutate(hosp = cases * hosprate)
return(out)
}
out <- bp_toy(r=1.1,hosprate = 0.02,gentime = 5) %>%
mutate(scenario = "severe") %>%
bind_rows(bp_toy(r=2,hosprate = 0.00002,gentime = 5) %>%
mutate(scenario = "infectious"))
ggplot(out,aes(x = days,y = hosp,col = scenario))+
geom_line()
out <- bp_toy(r=1.1,hosprate = 0.2,gentime = 5) %>%
mutate(scenario = "severe") %>%
bind_rows(bp_toy(r=2,hosprate = 0.00002,gentime = 5) %>%
mutate(scenario = "infectious"))
ggplot(out,aes(x = days,y = hosp,col = scenario))+
geom_line()
50000*0.02
bp_toy <- function(r = 2,initial_cases = 1,gens = 30,gentime = 5,hosprate = 0.015)
{
out <- tibble(gen = 1:gens) %>%
mutate(days = (gen-1)*gentime,
cases = initial_cases*r^(gen+rnorm(gens,0,r*0.1))) %>%
mutate(hosp = lag(cases * hosprate),7)
return(out)
}
out <- bp_toy(r=1.1,hosprate = 0.2,gentime = 5) %>%
mutate(scenario = "severe") %>%
bind_rows(bp_toy(r=2,hosprate = 0.00002,gentime = 5) %>%
mutate(scenario = "infectious"))
out
out <- tibble(gen = 1:gens) %>%
mutate(days = (gen-1)*gentime,
cases = initial_cases*r^(gen+rnorm(gens,0,r*0.1))) %>%
mutate(hosp = lag(cases * hosprate,7))
bp_toy <- function(r = 2,initial_cases = 1,gens = 30,gentime = 5,hosprate = 0.015)
{
out <- tibble(gen = 1:gens) %>%
mutate(days = (gen-1)*gentime,
cases = initial_cases*r^(gen+rnorm(gens,0,r*0.1))) %>%
mutate(hosp = lag(cases * hosprate,7))
return(out)
}
out <- bp_toy(r=1.1,hosprate = 0.2,gentime = 5) %>%
mutate(scenario = "severe") %>%
bind_rows(bp_toy(r=2,hosprate = 0.00002,gentime = 5) %>%
mutate(scenario = "infectious"))
out
bp_toy <- function(r = 2,initial_cases = 1,gens = 30,gentime = 5,hosprate = 0.015)
{
out <- tibble(gen = 1:gens) %>%
mutate(days = (gen-1)*gentime,
cases = initial_cases*r^(gen+rnorm(gens,0,r*0.1))) %>%
mutate(hosp = lag(cases * hosprate,7)) %>%
mutate(hosp = replace_na(hosp,0))
return(out)
}
out <- bp_toy(r=1.1,hosprate = 0.2,gentime = 5) %>%
mutate(scenario = "severe") %>%
bind_rows(bp_toy(r=2,hosprate = 0.00002,gentime = 5) %>%
mutate(scenario = "infectious"))
bp_toy <- function(r = 2,initial_cases = 1,gens = 30,gentime = 5,hosprate = 0.015)
{
out <- tibble(gen = 1:gens) %>%
mutate(days = (gen-1)*gentime,
cases = initial_cases*r^(gen+rnorm(gens,0,r*0.1))) %>%
mutate(hosp = lag(cases * hosprate,7)) %>%
mutate(hosp = replace_na(hosp,initial_cases*hosp))
return(out)
}
out <- bp_toy(r=1.1,hosprate = 0.2,gentime = 5) %>%
mutate(scenario = "severe") %>%
bind_rows(bp_toy(r=2,hosprate = 0.00002,gentime = 5) %>%
mutate(scenario = "infectious"))
bp_toy <- function(r = 2,initial_cases = 1,gens = 30,gentime = 5,hosprate = 0.015)
{
out <- tibble(gen = 1:gens) %>%
mutate(days = (gen-1)*gentime,
cases = initial_cases*r^(gen+rnorm(gens,0,r*0.1))) %>%
mutate(hosp = lag(cases * hosprate,7)) %>%
mutate(hosp = replace_na(hosp,initial_cases*hosprate))
return(out)
}
out <- bp_toy(r=1.1,hosprate = 0.2,gentime = 5) %>%
mutate(scenario = "severe") %>%
bind_rows(bp_toy(r=2,hosprate = 0.00002,gentime = 5) %>%
mutate(scenario = "infectious"))
ggplot(out,aes(x = days,y = hosp))+
geom_line()
ggplot(out,aes(x = days,y = hosp,col = scenario))+
geom_line()
out <- bp_toy(r = 2,hosprate = 0.075,gentime = 7)
ggplot(out,aes(x = days,y = hosp,col = scenario))+
geom_line()
ggplot(out,aes(x = days,y = hosp))+
geom_line()
out <- bp_toy(r = 2,hosprate = 0.075,gentime = 7,gens = 4)
ggplot(out,aes(x = days,y = hosp))+
geom_line()
out <- bp_toy(initial_cases = 1000,r = 2,hosprate = 0.075,gentime = 7,gens = 4)
ggplot(out,aes(x = days,y = cases))+
geom_line()
out <- bp_toy(initial_cases = 1000,r = 2,hosprate = 0.075,gentime = 7,gens = 5)
ggplot(out,aes(x = days,y = cases))+
geom_line()
"))
out <- bp_toy(initial_cases = 1000,r = 2,hosprate = 0.075,gentime = 7,gens = 5)
ggplot(out,aes(x = days,y = cases))+
geom_line()
()()()
"""))
out <- bp_toy(initial_cases = 1000,r = 2,hosprate = 0.075,gentime = 7,gens = 5)
ggplot(out,aes(x = days,y = cases))+
geom_line()
setwd("~/Documents/personal/bods_example")
args = commandArgs(trailingOnly=TRUE)
# Read in file
ck <- jsonlite::fromJSON(args)
?commandArgs
args <- "data/Chaarat-Kapan-2021-02-19.json"
# Read in file
ck <- jsonlite::fromJSON(args)
# Separate statement types
ps <- dplyr::filter(ck,statementType == "personStatement")
es <- dplyr::filter(ck,statementType == "entityStatement")
ocs <- dplyr::filter(ck,statementType == "ownershipOrControlStatement")
# Beneficial ownership statements according to owner type
ownerType <- ifelse(is.na(ocs$interestedParty$describedByPersonStatement),
"entity",
"person")
beneficialOwnershipOrControl <- dplyr::bind_rows(ocs$interests)$beneficialOwnershipOrControl
message("\n1. Summary of beneficialOwnershipOrControl by type of interested party\n")
table(ownerType,beneficialOwnershipOrControl)
message("\n2. Summary of identifiers in person statements\n")
if(all(sapply(ps$identifiers,is.null)))
{
message("There are no identifiers in the person statements\n")
}else
{
dplyr::bind_rows(ps$identifiers)
}
message("\n3. Summary of identifiers in entity statements\n")
if(all(sapply(es$identifiers,is.null)))
{
message("There are no identifiers in the entity statements\n")
} else
{
dplyr::bind_rows(es$identifiers)
}
ps
es$identifiers
es
es$name
view(es$name)
View(es$name)
writeClipboard
write_csv(es$name,"data/name_lookup.csv")
write_csv(es$name,"data/name_lookup.csv")
library(tidyverse)
write_csv(es$name,"data/name_lookup.csv")
write_csv(tibble(name = es$name),"data/name_lookup.csv")
?read_csv
names <- readr::read_csv("data/name_lookup.csv")
names
ps$name
ps$names
ps$names
es
es$names
es$name
nams <- tibble(id = es$statementID,nam = es$name)
nams
ps$names %>%
bind_rows()
nams <- tibble(id = es$statementID,nam = es$name) %>%
bind_rows(
tibble(id = ps$statementDate,
nam = ps$names %>%
bind_rows() %>% pull(fullName))
)
nams <- tibble(id = es$statementID,nam = es$name) %>%
bind_rows(tibble(id = ps$statementDate,
nam = ps$names %>%
bind_rows() %>%
pull(fullName)))
tibble(id = es$statementID,nam = es$name)
tibble(id = ps$statementDate,
nam = ps$names %>%
bind_rows() %>%
pull(fullName))
ps$names %>%
bind_rows() %>%
pull(fullName)
tibble(id = ps$statementDate,
nam = ps$names %>%
bind_rows() %>%
pull(fullName))
ps$statementDate
ps$names
nams <- tibble(id = es$statementID,nam = es$name) %>%
bind_rows(tibble(id = ps$statementDate,
nam = ps$names %>%
bind_rows() %>%
pull(fullName) %>%
filter(type == "individual")))
nams <- tibble(id = es$statementID,nam = es$name) %>%
bind_rows(tibble(id = ps$statementDate,
nam = ps$names %>%
bind_rows() %>%
pull(fullName) %>%
dplyr::filter(type == "individual")))
nams <- tibble(id = es$statementID,nam = es$name) %>%
bind_rows(tibble(id = ps$statementDate,
nam = ps$names %>%
bind_rows() %>%
dplyr::filter(type == "individual") %>%
pull(fullName)))
nams
names_lookup <- read_csv("data/name_lookup.csv")
names_lookup
names_lookup <- read_csv("data/name_lookup.csv")
names_lookup
nams
nams %>% left_join(names_lookup %>% rename(nam = newname))
names_lookup
nams %>% left_join(names_lookup %>% rename(nam = name))
tibble(id = V(g1)$name) %>%
left_join(nams %>%
left_join(names_lookup %>%
rename(nam = name)))
library(jsonlite)
library(tidyverse)
library(igraph)
library(showtext)
names_lookup <- read_csv("data/name_lookup.csv")
# Read in file
ck <- jsonlite::fromJSON(args[1])
ps <- filter(ck,statementType == "personStatement")
es <- filter(ck,statementType == "entityStatement")
ocs <- filter(ck,statementType == "ownershipOrControlStatement")
owners <- ifelse(is.na(ocs$interestedParty$describedByPersonStatement),
ocs$interestedParty$describedByEntityStatement,
ocs$interestedParty$describedByPersonStatement)
entities <- ocs$subject$describedByEntityStatement
g1 <- graph_from_edgelist(matrix(c(owners,entities),ncol = 2,byrow = FALSE))
v.cols <- ifelse(V(g1)$name %in% ps$statementID,"steelblue3","grey")
e.cols <- ifelse(bind_rows(ocs$interests)$beneficialOwnershipOrControl,"black","red")
V(g1)$name <- str_replace_all(V(g1)$name,"-","-\n")
nams <- tibble(id = es$statementID,nam = es$name) %>%
bind_rows(tibble(id = ps$statementDate,
nam = ps$names %>%
bind_rows() %>%
dplyr::filter(type == "individual") %>%
pull(fullName)))
tibble(id = V(g1)$name) %>%
left_join(nams %>%
left_join(names_lookup %>%
rename(nam = name)))
g1 <- graph_from_edgelist(matrix(c(owners,entities),ncol = 2,byrow = FALSE))
v.cols <- ifelse(V(g1)$name %in% ps$statementID,"steelblue3","grey")
e.cols <- ifelse(bind_rows(ocs$interests)$beneficialOwnershipOrControl,"black","red")
nams <- tibble(id = es$statementID,nam = es$name) %>%
bind_rows(tibble(id = ps$statementDate,
nam = ps$names %>%
bind_rows() %>%
dplyr::filter(type == "individual") %>%
pull(fullName)))
tibble(id = V(g1)$name) %>%
left_join(nams %>%
left_join(names_lookup %>%
rename(nam = name)))
nams <- tibble(id = es$statementID,nam = es$name) %>%
bind_rows(tibble(id = ps$statementID,
nam = ps$names %>%
bind_rows() %>%
dplyr::filter(type == "individual") %>%
pull(fullName)))
tibble(id = V(g1)$name) %>%
left_join(nams %>%
left_join(names_lookup %>%
rename(nam = name)))
V(g1)$name <- tibble(id = V(g1)$name) %>%
left_join(nams %>%
left_join(names_lookup %>%
rename(nam = name)))
V(g1)$name <- tibble(id = V(g1)$name) %>%
left_join(nams %>%
left_join(names_lookup %>%
rename(nam = name))) %>%
pull(newname)
tibble(id = V(g1)$name) %>%
left_join(nams %>%
left_join(names_lookup %>%
rename(nam = name))) %>%
pull(newname)
tibble(id = V(g1)$name) %>%
left_join(nams %>%
left_join(names_lookup %>%
rename(nam = name)))
g1 <- graph_from_edgelist(matrix(c(owners,entities),ncol = 2,byrow = FALSE))
v.cols <- ifelse(V(g1)$name %in% ps$statementID,"steelblue3","grey")
e.cols <- ifelse(bind_rows(ocs$interests)$beneficialOwnershipOrControl,"black","red")
nams <- tibble(id = es$statementID,nam = es$name) %>%
bind_rows(tibble(id = ps$statementID,
nam = ps$names %>%
bind_rows() %>%
dplyr::filter(type == "individual") %>%
pull(fullName)))
tibble(id = V(g1)$name) %>%
left_join(nams %>%
left_join(names_lookup %>%
rename(nam = name)))
tibble(id = V(g1)$name) %>%
left_join(nams %>%
left_join(names_lookup %>%
rename(nam = name))) %>%
pull(newname)
V(g1)$name
V(g1)$name <- tibble(id = V(g1)$name) %>%
left_join(nams %>%
left_join(names_lookup %>%
rename(nam = name))) %>%
pull(newname)
V(g1)$name
